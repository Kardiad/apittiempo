{"version":3,"sources":["webpack://cascaron-webpack/./src/js/conexion2.js","webpack://cascaron-webpack/./src/js/conexion1.js","webpack://cascaron-webpack/./src/index.js"],"names":["conexion2","async","lat","lon","tiempo","innerHTML","url","response","fetch","data","json","weather","icon","description","main","feels_like","grnd_level","humidity","pressure","sea_level","temp","temp_max","temp_min","error","document","getElementById","ciudadEspecifica","cabecera","coordenadas","lng","x","consultor","addEventListener","event","key","query","results","length","disabled","forEach","element","components","city","village","country","valorEscogido","parseInt","value","geometry","classList","remove","add","Math","round","conexion1"],"mappings":"mBAAA,MAEaA,EAAYC,MAAMC,EAAKC,KAChCC,OAAOC,UAAY,GACnB,IACI,MAAMC,EAAM,uDAAuBJ,SAAWC,iEACxCI,QAAiBC,MAAMF,GACvBG,QAAaF,EAASG,OAC5BN,OAAOC,UAAY,yFAE8BI,EAAKE,QAAQ,GAAGC,uCACpDH,EAAKE,QAAQ,GAAGE,kDACLJ,EAAKK,KAAKC,sDACPN,EAAKK,KAAKE,iDACdP,EAAKK,KAAKG,kDACPR,EAAKK,KAAKI,8CAChBT,EAAKK,KAAKK,2CACZV,EAAKK,KAAKM,8CACHX,EAAKK,KAAKO,kDACVZ,EAAKK,KAAKQ,iCAEtC,MACG,MAAMC,QCnBR,EAASC,SAASC,eAAe,UACjCC,EAAmBF,SAASC,eAAe,kBAC3CE,EAAWH,SAASC,eAAe,WACzC,IAAIG,EAAc,CACd1B,IAAK,GACL2B,IAAK,IAELC,EAAI,EACD,MCTDC,EAAYP,SAASC,eAAe,UAC1CM,EAAUC,iBAAiB,YAAaC,IACnB,UAAdA,EAAMC,KDOYjC,OAAMkC,IAC3B,IACA,MAAM7B,EAAM,kDAAkB6B,yCACxB5B,QAAiBC,MAAMF,GACvBG,QAAaF,EAASG,OACzBD,EAAK2B,QAAQC,OAAO,GACnBX,EAAiBY,UAAW,EAC5BZ,EAAiBrB,UAAY,oDAC7BI,EAAK2B,QAAQG,SAAQC,KACbA,EAAQC,WAAWC,MAAQF,EAAQC,WAAWE,UAAYH,EAAQC,WAAWG,QAC7ElB,EAAiBrB,WAAa,kBAAkByB,QAASU,EAAQC,WAAe,KAAGD,EAAQC,WAAWC,KAAQF,EAAQC,WAAkB,QAAGD,EAAQC,WAAWE,QAAU,MAAOH,EAAQC,WAAWC,MAAQF,EAAQC,WAAWE,QAASH,EAAQC,WAAWG,QAAS,eAElQlB,EAAiBrB,WAAa,GAC9ByB,QAGRJ,EAAiBM,iBAAiB,UAAU,KACxC,MAAMa,EAAgBC,SAASpB,EAAiBqB,OAChDnB,EAAc,CACV1B,IAAKO,EAAK2B,QAAQS,GAAeG,SAAS9C,IAC1C2B,IAAKpB,EAAK2B,QAAQS,GAAeG,SAASnB,KAE9CC,EAAE,EACFH,EAASsB,UAAUC,OAAO,UAC1BvB,EAASsB,UAAUE,IAAI,WACvBnD,EAAU4B,EAAY1B,IAAK0B,EAAYC,UAG3CF,EAASsB,UAAUC,OAAO,UAC1BvB,EAASsB,UAAUE,IAAI,WACvBvB,EAAc,CACV1B,IAAKkD,KAAKC,MAAM5C,EAAK2B,QAAQ,GAAGY,SAAS9C,KACzC2B,IAAKuB,KAAKC,MAAM5C,EAAK2B,QAAQ,GAAGY,SAASnB,MAEzC7B,EAAU4B,EAAY1B,IAAK0B,EAAYC,MAE9C,MAIG,MAHA,EAAOxB,UAAY,GACnBsB,EAASsB,UAAUE,IAAI,UACvBxB,EAASsB,UAAUC,OAAO,WACpB3B,QC9CN+B,CAAUvB,EAAUgB,W","file":"bd351b97df6ad4b443cc.bundle.js","sourcesContent":["const keyApi2 = '&appid=a7bc5ba85ffdd89602ed4583829f24a4'\r\nconst httpProvider2 = 'https://api.openweathermap.org/data/2.5/weather?';\r\nexport const conexion2 = async(lat, lon)=>{\r\n    tiempo.innerHTML = '';\r\n    try{    \r\n        const url = `${httpProvider2}lat=${lat}&lon=${lon}&lang=es&units=metric&${keyApi2}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        tiempo.innerHTML = `\r\n        <div class=\"carta\">\r\n        <h3><img src=\"http://openweathermap.org/img/wn/${data.weather[0].icon}.png\"></h3>\r\n        <p>Tiempo: ${data.weather[0].description}</p>\r\n        <p>Sensación térmica: ${data.main.feels_like}ºC</p>\r\n        <p>Nivel sobre el suelo: ${data.main.grnd_level}m</p>\r\n        <p>Humedad ambiente: ${data.main.humidity}%</p>\r\n        <p>Presión atmosférica: ${data.main.pressure}hPa</p>\r\n        <p>Nivel del mar: ${data.main.sea_level}m</p>\r\n        <p>Temperatura: ${data.main.temp}ºC</p>\r\n        <p>Temperatura máxima: ${data.main.temp_max}ºC</p>\r\n        <p>Temperatura minima: ${data.main.temp_min}ºC</p>\r\n        </div>`;\r\n    }catch{\r\n        throw error;\r\n    }\r\n}","import { conexion2 } from \"./conexion2\";\r\nconst keyApi = '&key=8b7694eff07149098e5f5f529a322c15';\r\nconst httpProvider = 'https://api.opencagedata.com/geocode/v1/json?q='\r\nconst tiempo = document.getElementById('tiempo');\r\nconst ciudadEspecifica = document.getElementById('comboBreaker20');\r\nconst cabecera = document.getElementById('topping');\r\nlet coordenadas = {\r\n    lat: '',\r\n    lng: ''\r\n}\r\nlet x = 0;\r\nexport const conexion1 = async(query)=>{\r\n    try{\r\n    const url = `${httpProvider}${query}${keyApi}`;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    if(data.results.length>1){\r\n        ciudadEspecifica.disabled = false;\r\n        ciudadEspecifica.innerHTML = `<option>Seleccione ciudad con ese nombre</option>`;\r\n        data.results.forEach(element => {\r\n            if((element.components.city || element.components.village) && element.components.country){\r\n                ciudadEspecifica.innerHTML += `<option value=\"${x++}\">${(element.components.city)? element.components.city : (element.components.village)? element.components.village : ''}-${(element.components.city || element.components.village)?element.components.country: ''}</option>`;\r\n            }else{\r\n                ciudadEspecifica.innerHTML += '';\r\n                x++;\r\n            }\r\n        });\r\n        ciudadEspecifica.addEventListener('change', ()=>{\r\n            const valorEscogido = parseInt(ciudadEspecifica.value);\r\n            coordenadas = {\r\n                lat: data.results[valorEscogido].geometry.lat,\r\n                lng: data.results[valorEscogido].geometry.lng\r\n            }\r\n            x=0;\r\n            cabecera.classList.remove('inicio');\r\n            cabecera.classList.add('buscado');\r\n            conexion2(coordenadas.lat, coordenadas.lng);\r\n        })\r\n    }else{\r\n        cabecera.classList.remove('inicio');\r\n        cabecera.classList.add('buscado');\r\n        coordenadas = {\r\n            lat: Math.round(data.results[0].geometry.lat),\r\n            lng: Math.round(data.results[0].geometry.lng)\r\n            }\r\n            conexion2(coordenadas.lat, coordenadas.lng);\r\n        }\r\n    }catch{\r\n        tiempo.innerHTML = '';\r\n        cabecera.classList.add('inicio');\r\n        cabecera.classList.remove('buscado');\r\n        throw error;\r\n    }\r\n}","import './css/style.css';\r\nimport { conexion1 } from './js/conexion1';\r\nconst consultor = document.getElementById('ciudad');\r\nconsultor.addEventListener('keypress', (event)=>{\r\n    if(event.key === 'Enter'){\r\n        conexion1(consultor.value);\r\n    }\r\n})"],"sourceRoot":""}