{"version":3,"sources":["webpack://cascaron-webpack/./src/js/conexion2.js","webpack://cascaron-webpack/./src/js/conexion1.js","webpack://cascaron-webpack/./src/index.js"],"names":["conexion2","async","lat","lon","tiempo","innerHTML","url","response","fetch","data","json","console","log","weather","icon","description","main","feels_like","grnd_level","humidity","pressure","sea_level","temp","temp_max","temp_min","error","document","getElementById","ciudadEspecifica","cabecera","coordenadas","lng","x","consultor","addEventListener","event","key","query","results","length","disabled","forEach","element","components","city","village","country","valorEscogido","parseInt","value","Math","round","geometry","classList","remove","add","hijosDePuta","children","conexion1"],"mappings":"mBAAA,MAEaA,EAAYC,MAAMC,EAAKC,KAChCC,OAAOC,UAAY,GACnB,IACI,MAAMC,EAAM,uDAAuBJ,SAAWC,iEACxCI,QAAiBC,MAAMF,GACvBG,QAAaF,EAASG,OAC5BC,QAAQC,IAAIH,GACZL,OAAOC,UAAY,yFAE8BI,EAAKI,QAAQ,GAAGC,uCACpDL,EAAKI,QAAQ,GAAGE,kDACLN,EAAKO,KAAKC,sDACPR,EAAKO,KAAKE,iDACdT,EAAKO,KAAKG,kDACPV,EAAKO,KAAKI,8CAChBX,EAAKO,KAAKK,2CACZZ,EAAKO,KAAKM,8CACHb,EAAKO,KAAKO,kDACVd,EAAKO,KAAKQ,iCAEtC,MACG,MAAMC,QCpBR,EAASC,SAASC,eAAe,UACjCC,EAAmBF,SAASC,eAAe,kBAC3CE,EAAWH,SAASC,eAAe,WACzC,IAAIG,EAAc,CACd5B,IAAK,GACL6B,IAAK,IAELC,EAAI,EACD,MCTDC,EAAYP,SAASC,eAAe,UAC1CM,EAAUC,iBAAiB,YAAaC,IACnB,UAAdA,EAAMC,KDOYnC,OAAMoC,IAC3B,IACA,MAAM/B,EAAM,kDAAkB+B,yCACxB9B,QAAiBC,MAAMF,GACvBG,QAAaF,EAASG,OAE5B,GADAC,QAAQC,IAAIH,GACTA,EAAK6B,QAAQC,OAAO,EACnBX,EAAiBY,UAAW,EAC5BZ,EAAiBvB,UAAY,oDAC7BI,EAAK6B,QAAQG,SAAQC,KACbA,EAAQC,WAAWC,MAAQF,EAAQC,WAAWE,UAAYH,EAAQC,WAAWG,QAC7ElB,EAAiBvB,WAAa,kBAAkB2B,QAASU,EAAQC,WAAe,KAAGD,EAAQC,WAAWC,KAAQF,EAAQC,WAAkB,QAAGD,EAAQC,WAAWE,QAAU,MAAOH,EAAQC,WAAWC,MAAQF,EAAQC,WAAWE,QAASH,EAAQC,WAAWG,QAAS,eAElQlB,EAAiBvB,WAAa,GAC9B2B,QAGRJ,EAAiBM,iBAAiB,UAAU,KACxC,MAAMa,EAAgBC,SAASpB,EAAiBqB,OAChDtC,QAAQC,IAAImC,GACZjB,EAAc,CACV5B,IAAKgD,KAAKC,MAAM1C,EAAK6B,QAAQS,GAAeK,SAASlD,KACrD6B,IAAKmB,KAAKC,MAAM1C,EAAK6B,QAAQS,GAAeK,SAASrB,MAEzDC,EAAE,EACFrB,QAAQC,IAAIkB,GACZD,EAASwB,UAAUC,OAAO,UAC1BzB,EAASwB,UAAUE,IAAI,WACvBvD,EAAU8B,EAAY5B,IAAK4B,EAAYC,YAE1C,CACD,IAAIyB,EAAc5B,EAAiB6B,SACnC9C,QAAQC,IAAI4C,GACZ3B,EAASwB,UAAUC,OAAO,UAC1BzB,EAASwB,UAAUE,IAAI,WACvBzB,EAAc,CACV5B,IAAKgD,KAAKC,MAAM1C,EAAK6B,QAAQ,GAAGc,SAASlD,KACzC6B,IAAKmB,KAAKC,MAAM1C,EAAK6B,QAAQ,GAAGc,SAASrB,MAEzC/B,EAAU8B,EAAY5B,IAAK4B,EAAYC,MAE9C,MAIG,MAHA,EAAO1B,UAAY,GACnBwB,EAASwB,UAAUE,IAAI,UACvB1B,EAASwB,UAAUC,OAAO,WACpB7B,QCnDNiC,CAAUzB,EAAUgB,W","file":"0b76be2b73a3cd53ecbb.bundle.js","sourcesContent":["const keyApi2 = '&appid=a7bc5ba85ffdd89602ed4583829f24a4'\r\nconst httpProvider2 = 'https://api.openweathermap.org/data/2.5/weather?';\r\nexport const conexion2 = async(lat, lon)=>{\r\n    tiempo.innerHTML = '';\r\n    try{    \r\n        const url = `${httpProvider2}lat=${lat}&lon=${lon}&lang=es&units=metric&${keyApi2}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        tiempo.innerHTML = `\r\n        <div class=\"carta\">\r\n        <h3><img src=\"http://openweathermap.org/img/wn/${data.weather[0].icon}.png\"></h3>\r\n        <p>Tiempo: ${data.weather[0].description}</p>\r\n        <p>Sensación térmica: ${data.main.feels_like}ºC</p>\r\n        <p>Nivel sobre el suelo: ${data.main.grnd_level}m</p>\r\n        <p>Humedad ambiente: ${data.main.humidity}%</p>\r\n        <p>Presión atmosférica: ${data.main.pressure}hPa</p>\r\n        <p>Nivel del mar: ${data.main.sea_level}m</p>\r\n        <p>Temperatura: ${data.main.temp}ºC</p>\r\n        <p>Temperatura máxima: ${data.main.temp_max}ºC</p>\r\n        <p>Temperatura máxima: ${data.main.temp_min}ºC</p>\r\n        </div>`;\r\n    }catch{\r\n        throw error;\r\n    }\r\n}","import { conexion2 } from \"./conexion2\";\r\nconst keyApi = '&key=8b7694eff07149098e5f5f529a322c15';\r\nconst httpProvider = 'https://api.opencagedata.com/geocode/v1/json?q='\r\nconst tiempo = document.getElementById('tiempo');\r\nconst ciudadEspecifica = document.getElementById('comboBreaker20');\r\nconst cabecera = document.getElementById('topping');\r\nlet coordenadas = {\r\n    lat: '',\r\n    lng: ''\r\n}\r\nlet x = 0;\r\nexport const conexion1 = async(query)=>{\r\n    try{\r\n    const url = `${httpProvider}${query}${keyApi}`;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    console.log(data);\r\n    if(data.results.length>1){\r\n        ciudadEspecifica.disabled = false;\r\n        ciudadEspecifica.innerHTML = `<option>Seleccione ciudad con ese nombre</option>`;\r\n        data.results.forEach(element => {\r\n            if((element.components.city || element.components.village) && element.components.country){\r\n                ciudadEspecifica.innerHTML += `<option value=\"${x++}\">${(element.components.city)? element.components.city : (element.components.village)? element.components.village : ''}-${(element.components.city || element.components.village)?element.components.country: ''}</option>`;\r\n            }else{\r\n                ciudadEspecifica.innerHTML += '';\r\n                x++;\r\n            }\r\n        });\r\n        ciudadEspecifica.addEventListener('change', ()=>{\r\n            const valorEscogido = parseInt(ciudadEspecifica.value);\r\n            console.log(valorEscogido);\r\n            coordenadas = {\r\n                lat: Math.round(data.results[valorEscogido].geometry.lat),\r\n                lng: Math.round(data.results[valorEscogido].geometry.lng)\r\n            }\r\n            x=0;\r\n            console.log(coordenadas)\r\n            cabecera.classList.remove('inicio');\r\n            cabecera.classList.add('buscado');\r\n            conexion2(coordenadas.lat, coordenadas.lng);\r\n        })\r\n    }else{\r\n        let hijosDePuta = ciudadEspecifica.children;\r\n        console.log(hijosDePuta);\r\n        cabecera.classList.remove('inicio');\r\n        cabecera.classList.add('buscado');\r\n        coordenadas = {\r\n            lat: Math.round(data.results[0].geometry.lat),\r\n            lng: Math.round(data.results[0].geometry.lng)\r\n            }\r\n            conexion2(coordenadas.lat, coordenadas.lng);\r\n        }\r\n    }catch{\r\n        tiempo.innerHTML = '';\r\n        cabecera.classList.add('inicio');\r\n        cabecera.classList.remove('buscado');\r\n        throw error;\r\n    }\r\n}\r\n","import './css/style.css';\r\nimport { conexion1 } from './js/conexion1';\r\nconst consultor = document.getElementById('ciudad');\r\nconsultor.addEventListener('keypress', (event)=>{\r\n    if(event.key === 'Enter'){\r\n        conexion1(consultor.value);\r\n    }\r\n})"],"sourceRoot":""}